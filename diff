diff --git a/epan/dissectors/packet-iwarp-mpa.c b/epan/dissectors/packet-iwarp-mpa.c
index 2bc9243dc4..26db219dab 100644
--- a/epan/dissectors/packet-iwarp-mpa.c
+++ b/epan/dissectors/packet-iwarp-mpa.c
@@ -691,6 +691,8 @@ dissect_mpa_fpdu(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree,
  /* get ULPDU length of this FPDU */
  ulpdu_length = (guint16) tvb_get_ntohs(tvb, offset);
 
+ mpa_packetlist(pinfo, MPA_FPDU);
+
  if (state->minfo[endpoint].valid) {
   num_of_m = number_of_markers(state, tcpinfo, endpoint);
  }
@@ -709,11 +711,12 @@ dissect_mpa_fpdu(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree,
   pad_length = fpdu_pad_length(ulpdu_length);
   exp_ulpdu_length = expected_ulpdu_length(state, tcpinfo, endpoint);
   if (!exp_ulpdu_length || exp_ulpdu_length != (ulpdu_length + pad_length)) {
-   return 0;
+   proto_tree_add_expert_format(tree, pinfo, &ei_mpa_bad_length, tvb, offset,
+    MPA_ULPDU_LENGTH_LEN,
+    "[ULPDU length [%u] field does not contain the expected length[%u]]",
+    exp_ulpdu_length, ulpdu_length + pad_length);
   }
 
-  mpa_packetlist(pinfo, MPA_FPDU);
-
   mpa_item = proto_tree_add_item(tree, proto_iwarp_mpa, tvb, 0,
     -1, ENC_NA);
   mpa_tree = proto_item_add_subtree(mpa_item, ett_mpa);

diff --git a/epan/dissectors/packet-iwarp-mpa.c b/epan/dissectors/packet-iwarp-mpa.c
index 2bc9243dc4..26db219dab 100644
--- a/epan/dissectors/packet-iwarp-mpa.c
+++ b/epan/dissectors/packet-iwarp-mpa.c
@@ -691,6 +691,8 @@ dissect_mpa_fpdu(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree,
  /* get ULPDU length of this FPDU */
  ulpdu_length = (guint16) tvb_get_ntohs(tvb, offset);
 
+ mpa_packetlist(pinfo, MPA_FPDU);
+
  if (state->minfo[endpoint].valid) {
   num_of_m = number_of_markers(state, tcpinfo, endpoint);
  }
@@ -709,11 +711,12 @@ dissect_mpa_fpdu(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree,
   pad_length = fpdu_pad_length(ulpdu_length);
   exp_ulpdu_length = expected_ulpdu_length(state, tcpinfo, endpoint);
   if (!exp_ulpdu_length || exp_ulpdu_length != (ulpdu_length + pad_length)) {
-   return 0;
+   proto_tree_add_expert_format(tree, pinfo, &ei_mpa_bad_length, tvb, offset,
+    MPA_ULPDU_LENGTH_LEN,
+    "[ULPDU length [%u] field does not contain the expected length[%u]]",
+    exp_ulpdu_length, ulpdu_length + pad_length);
   }
 
-  mpa_packetlist(pinfo, MPA_FPDU);
-
   mpa_item = proto_tree_add_item(tree, proto_iwarp_mpa, tvb, 0,
     -1, ENC_NA);
   mpa_tree = proto_item_add_subtree(mpa_item, ett_mpa);

diff --git a/epan/dissectors/packet-iwarp-mpa.c b/epan/dissectors/packet-iwarp-mpa.c
index 2bc9243dc4..26db219dab 100644
--- a/epan/dissectors/packet-iwarp-mpa.c
+++ b/epan/dissectors/packet-iwarp-mpa.c
@@ -691,6 +691,8 @@ dissect_mpa_fpdu(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree,
  /* get ULPDU length of this FPDU */
  ulpdu_length = (guint16) tvb_get_ntohs(tvb, offset);
 
+ mpa_packetlist(pinfo, MPA_FPDU);
+
  if (state->minfo[endpoint].valid) {
   num_of_m = number_of_markers(state, tcpinfo, endpoint);
  }
@@ -709,11 +711,12 @@ dissect_mpa_fpdu(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree,
   pad_length = fpdu_pad_length(ulpdu_length);
   exp_ulpdu_length = expected_ulpdu_length(state, tcpinfo, endpoint);
   if (!exp_ulpdu_length || exp_ulpdu_length != (ulpdu_length + pad_length)) {
-   return 0;
+   proto_tree_add_expert_format(tree, pinfo, &ei_mpa_bad_length, tvb, offset,
+    MPA_ULPDU_LENGTH_LEN,
+    "[ULPDU length [%u] field does not contain the expected length[%u]]",
+    exp_ulpdu_length, ulpdu_length + pad_length);
   }
 
-  mpa_packetlist(pinfo, MPA_FPDU);
-
   mpa_item = proto_tree_add_item(tree, proto_iwarp_mpa, tvb, 0,
     -1, ENC_NA);
   mpa_tree = proto_item_add_subtree(mpa_item, ett_mpa);

diff --git a/epan/dissectors/packet-iwarp-mpa.c b/epan/dissectors/packet-iwarp-mpa.c
index 2bc9243dc4..26db219dab 100644
--- a/epan/dissectors/packet-iwarp-mpa.c
+++ b/epan/dissectors/packet-iwarp-mpa.c
@@ -691,6 +691,8 @@ dissect_mpa_fpdu(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree,
  /* get ULPDU length of this FPDU */
  ulpdu_length = (guint16) tvb_get_ntohs(tvb, offset);
 
+ mpa_packetlist(pinfo, MPA_FPDU);
+
  if (state->minfo[endpoint].valid) {
   num_of_m = number_of_markers(state, tcpinfo, endpoint);
  }
@@ -709,11 +711,12 @@ dissect_mpa_fpdu(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree,
   pad_length = fpdu_pad_length(ulpdu_length);
   exp_ulpdu_length = expected_ulpdu_length(state, tcpinfo, endpoint);
   if (!exp_ulpdu_length || exp_ulpdu_length != (ulpdu_length + pad_length)) {
-   return 0;
+   proto_tree_add_expert_format(tree, pinfo, &ei_mpa_bad_length, tvb, offset,
+    MPA_ULPDU_LENGTH_LEN,
+    "[ULPDU length [%u] field does not contain the expected length[%u]]",
+    exp_ulpdu_length, ulpdu_length + pad_length);
   }
 
-  mpa_packetlist(pinfo, MPA_FPDU);
-
   mpa_item = proto_tree_add_item(tree, proto_iwarp_mpa, tvb, 0,
     -1, ENC_NA);
   mpa_tree = proto_item_add_subtree(mpa_item, ett_mpa);

diff --git a/epan/dissectors/packet-iwarp-mpa.c b/epan/dissectors/packet-iwarp-mpa.c
index 2bc9243dc4..26db219dab 100644
--- a/epan/dissectors/packet-iwarp-mpa.c
+++ b/epan/dissectors/packet-iwarp-mpa.c
@@ -691,6 +691,8 @@ dissect_mpa_fpdu(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree,
  /* get ULPDU length of this FPDU */
  ulpdu_length = (guint16) tvb_get_ntohs(tvb, offset);
 
+ mpa_packetlist(pinfo, MPA_FPDU);
+
  if (state->minfo[endpoint].valid) {
   num_of_m = number_of_markers(state, tcpinfo, endpoint);
  }
@@ -709,11 +711,12 @@ dissect_mpa_fpdu(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree,
   pad_length = fpdu_pad_length(ulpdu_length);
   exp_ulpdu_length = expected_ulpdu_length(state, tcpinfo, endpoint);
   if (!exp_ulpdu_length || exp_ulpdu_length != (ulpdu_length + pad_length)) {
-   return 0;
+   proto_tree_add_expert_format(tree, pinfo, &ei_mpa_bad_length, tvb, offset,
+    MPA_ULPDU_LENGTH_LEN,
+    "[ULPDU length [%u] field does not contain the expected length[%u]]",
+    exp_ulpdu_length, ulpdu_length + pad_length);
   }
 
-  mpa_packetlist(pinfo, MPA_FPDU);
-
   mpa_item = proto_tree_add_item(tree, proto_iwarp_mpa, tvb, 0,
     -1, ENC_NA);
   mpa_tree = proto_item_add_subtree(mpa_item, ett_mpa);

